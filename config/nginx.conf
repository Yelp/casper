daemon off;

env ENVOY_CONFIGS_PATH;
env PAASTA_INSTANCE;
env PAASTA_SERVICE;
env SERVICES_YAML_PATH;
env SRV_CONFIGS_PATH;

# Log to stderr, so we can see stacktraces in PaaSTA logs
error_log /dev/stderr error;

events {
    worker_connections 8192;
}

http {
    # Set lua search path
    lua_package_path '/usr/local/openresty/lualib/?.lua;luarocks/share/lua/5.1/?.lua;luarocks/share/lua/5.1/?/init.lua;resty_modules/lualib/?.lua;lua/?.lua;';
    lua_package_cpath 'luarocks/lib/lua/5.1/?.so;;';

    log_format main_spectre '{"time_iso8601": "$time_iso8601", "remote_addr": "$remote_addr", "connection": "$connection", "connection_requests": "$connection_requests", "http_user_agent": "$http_user_agent", "status": "$status", "request_length": "$request_length", "bytes_sent": "$bytes_sent", "request_time": "$request_time", "request_uri": "$request_uri", "unix_time": "$msec", "x_smartstack_source": "$http_x_smartstack_source", "x_smartstack_destination": "$http_x_smartstack_destination", "spectre_cache_status": "$sent_http_spectre_cache_status"}';
    # Update start.sh script if you change next line
    access_log /dev/stdout main_spectre;

    lua_shared_dict cassandra_read_conn 1m;
    lua_shared_dict cassandra_read_cluster 1m;
    lua_shared_dict cassandra_write_conn 1m;
    lua_shared_dict cassandra_write_cluster 1m;

    # Disable error logging when a failure occurs for the TCP or UDP cosockets
    lua_socket_log_errors off;
    # Increase cosocket connection pool (default 30)
    lua_socket_pool_size 512;
    # Increase default socket keepalive
    lua_socket_keepalive_timeout 10m;
    # Increase the default max body size (PEOBS-1516)
    client_max_body_size 20m;
    # Allow underscores in headers
    underscores_in_headers on;
    lua_transform_underscores_in_response_headers off;

    # We can't create ngx.timers during init_by_lua, so we need to
    # do that while initializing workers
    init_worker_by_lua_block {
        local config_loader = require 'config_loader'
        config_loader.reload_configs(false)
    }

    init_by_lua_block {
        local config_loader = require 'config_loader'
        config_loader.load_services_configs(os.getenv('SRV_CONFIGS_PATH'))
        local datastores = require 'datastores'
        datastores.cassandra_helper.init()
        require 'dynamodb'
    }

    server {
        listen 8888 reuseport;

        # Provide some nginx stats to the fullerite collector
        location /nginx-status {
            stub_status on;
        }

        location / {
            content_by_lua_file lua/entry_point.lua;
        }
    }
}

# vim: syntax=nginx
